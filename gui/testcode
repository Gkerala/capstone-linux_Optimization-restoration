import threading
import tkinter as tk
from tkinter import Toplevel, Label, messagebox
import subprocess

def run_optimizer_with_feedback():
    result_window = Toplevel()
    result_window.title("최적화 진행 상태")
    result_window.geometry("450x400")

    optim_items = ["CPU", "I/O", "Memory", "Services", "Disk", "Security"]
    status_labels = {}

    for i, label in enumerate(optim_items):
        status_labels[label] = Label(result_window, text=f"{label} 최적화: ⏳ 대기 중...")
        status_labels[label].grid(row=i, column=0, sticky="w", padx=10, pady=5)

    result_label = Label(result_window, text="⌛ 최적화 진행 중...", fg="blue")
    result_label.grid(row=len(optim_items), column=0, pady=10)

    def run_and_monitor():
        process = subprocess.Popen(
            ["sudo", "PYTHONPATH=.", "python3", "src/optimizer.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            shell=True
        )

        while True:
            line = process.stdout.readline()
            if not line:
                break
            print("[DEBUG] 최적화 출력 로그:", line.strip())

            for label in optim_items:
                if f"[PASS] {label}" in line:
                    status_labels[label].config(text=f"{label} 최적화: ✅ 성공", fg="green")
                elif f"[SKIP] {label}" in line:
                    status_labels[label].config(text=f"{label} 최적화: ⚠️ 건너뜀", fg="orange")
                elif f"[FAIL] {label}" in line or f"[ERROR] {label}" in line:
                    status_labels[label].config(text=f"{label} 최적화: ❌ 실패", fg="red")

        process.wait()
        if process.returncode == 0:
            result_label.config(text="✅ 전체 최적화 완료", fg="green")
        else:
            result_label.config(text="❌ 일부 최적화 실패", fg="red")

    threading.Thread(target=run_and_monitor, daemon=True).start()
