def run_optimizer_with_feedback():
    result_window = Toplevel()
    result_window.title("최적화 진행 상태")
    result_window.geometry("400x350")

    optim_items = ["CPU", "I/O", "Memory", "Services", "Disk", "Security"]
    status_labels = {}

    for i, label in enumerate(optim_items):
        status_labels[label] = tk.Label(result_window, text=f"{label} 최적화: ⏳ 대기 중...")
        status_labels[label].grid(row=i, column=0, sticky="w", padx=10, pady=5)

    result_label = tk.Label(result_window, text="⌛ 최적화 중...", fg="blue")
    result_label.grid(row=len(optim_items), column=0, pady=10)

    try:
        result = subprocess.run(
            ["sudo", "python3", "src/optimizer.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True
        )
        output = result.stdout

        for label in optim_items:
            if f"[PASS] {label}" in output:
                status_labels[label].config(text=f"{label} 최적화: ✅ 성공", fg="green")
            elif f"[SKIP] {label}" in output:
                status_labels[label].config(text=f"{label} 최적화: ⚠️ 건너뜀", fg="orange")
            else:
                status_labels[label].config(text=f"{label} 최적화: ❌ 실패", fg="red")

        if result.returncode == 0:
            result_label.config(text="✅ 전체 최적화 완료", fg="green")
        else:
            result_label.config(text="❌ 일부 최적화 실패", fg="red")

    except Exception as e:
        result_label.config(text="❌ 최적화 실행 중 예외 발생", fg="red")
        messagebox.showerror("오류", f"최적화 실행 실패:\n{e}")
